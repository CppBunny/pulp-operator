---
apiVersion: v1
kind: Deployment
metadata:
  name: "{{ meta.name }}-resource-manager"
  namespace: "{{ project_name }}"
  labels:
    app: "{{ deployment_type }}-resource-manager"
spec:
  replicas: {{ pulp_resource_manager.replicas }}
  selector:
    matchLabels:
      app: "{{ deployment_type }}-resource-manager"
  template:
    metadata:
      labels:
        app: "{{ deployment_type }}-resource-manager"
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      #serviceAccountName: "{{ project_name }}-anyuid"
      volumes:
        - name: {{ meta.name }}-pulp-server
          secret:
            secretName: {{ meta.name }}-pulp-server
            items:
              - path: settings.py
                key: settings.py
        - name: pulp-file-storage
          persistentVolumeClaim:
            claimName: pulp-file-storage
      containers:
        - name: pulp-resource-manager
          image: "{{ registry }}/{{ project }}/{{ image }}:{{ tag }}"
          imagePullPolicy: "IfNotPresent"
          # We set args, not command, so as to not override the entrypoint script
          args: ["pulp-resource-manager"]
          env:
            - name: POSTGRES_SERVICE_HOST
              value: "{{ postgres_host }}"
            - name: POSTGRES_SERVICE_PORT
              value: "{{ postgres_port }}"
            - name: REDIS_SERVICE_HOST
              value: "{{ meta.name }}-redis"
            - name: REDIS_SERVICE_PORT
              value: "{{ pulp_default_settings.redis_port }}"
          volumeMounts:
            - name: {{ meta.name }}-pulp-server
              mountPath: "/etc/pulp/"
            - name: pulp-file-storage
              readOnly: false
              mountPath: "/var/lib/pulp"
