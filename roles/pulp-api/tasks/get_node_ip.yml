---

- name: Set web protocol
  set_fact:
    web_protocol: "https"
  when:
    - ingress_tls_secret | length
    - route_tls_secret | length

- name: Set node address for ingress
  set_fact:
    content_origin: "{{ web_protocol }}://{{ hostname }}"
    ansible_api_hostname: "{{ web_protocol }}://{{ hostname }}"
    token_server: "{{ web_protocol }}://{{ hostname }}/token/"
  when:
    - ingress_type|lower == "ingress"
    - hostname is defined

- name: Fail if hostname is not defined when ingress is specified
  fail:
    msg: "The hostname must be specified when using ingress_type {{ ingress_type }}."
  when:
    - ingress_type|lower == "ingress"
    - hostname is not defined

- block:
    - name: Retrieve route URL
      k8s_info:
        kind: Route
        namespace: '{{ meta.namespace }}'
        name: '{{ meta.name }}'
      register: route_url

    - name: Update URL status
      set_fact:
        web_url: "https://{{ route_url['resources'][0]['status']['ingress'][0]['host'] }}"

  when: ingress_type | lower == 'route'


- name: Set node address for route
  set_fact:
    content_origin: "{{ web_url }}"
    ansible_api_hostname: "{{ web_url }}"
    token_server: "{{ web_url }}/token/"
  when:
    - ingress_type|lower == "route"

- name: Look up the 1st address of the 1st node
  k8s_info:
    api_version: v1
    kind: Node
  register: k8s_nodes
  when:
    - content_origin is not defined

- name: Set node address
  set_fact:
    content_origin: "http://{{ k8s_nodes.resources[0].status.addresses[0].address }}:24880"
    ansible_api_hostname: "http://{{ k8s_nodes.resources[0].status.addresses[0].address }}:24880"
    token_server: "http://{{ k8s_nodes.resources[0].status.addresses[0].address }}:24880/token/"
  when:
    - content_origin is not defined

- name: Set content_origin
  set_fact:
    content_origin_dict: "{ 'content_origin': '{{ content_origin }}', 'ansible_api_hostname': '{{ ansible_api_hostname }}' }"

- name: Set token_server and other container default settings
  set_fact:
    token_server_dict: "{ 'token_server': '{{ token_server }}', 'token_auth_disable': 'False', 'token_signature_algorithm': 'ES256','public_key_path': '/etc/pulp/keys/container_auth_public_key.pem', 'private_key_path': '/etc/pulp/keys/container_auth_private_key.pem', 'galaxy_feature_flags': { 'execution_environments': 'True' }  }"
  when: container_token_secret is defined

- name: DEBUG Show content_origin_dict
  debug:
    msg: "{{ content_origin_dict }}"

- name: merge content_origin with settings
  set_fact:
    default_settings: "{{ default_settings|combine(content_origin_dict) }}"

- name: merge token_server with settings
  set_fact:
    default_settings: "{{ default_settings|combine(token_server_dict) }}"
  when: container_token_secret is defined

- name: DEBUG Show content_origin
  debug:
    msg: "{{ default_settings.content_origin }}"
