---
apiVersion: v1
kind: Deployment
metadata:
  name: "{{ meta.name }}-content"
  namespace: "{{ project_name }}"
  labels:
    app.kubernetes.io/name: '{{ deployment_type }}-content'
    app.kubernetes.io/instance: '{{ deployment_type }}-content-{{ meta.name }}'
    app.kubernetes.io/component: content-server
    app.kubernetes.io/part-of: '{{ deployment_type }}'
    app.kubernetes.io/managed-by: '{{ deployment_type }}-operator'
spec:
  replicas: {{ content.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: '{{ deployment_type }}-content'
      app.kubernetes.io/instance: '{{ deployment_type }}-content-{{ meta.name }}'
      app.kubernetes.io/component: content-server
      app.kubernetes.io/part-of: '{{ deployment_type }}'
      app.kubernetes.io/managed-by: '{{ deployment_type }}-operator'
  template:
    metadata:
      labels:
        app.kubernetes.io/name: '{{ deployment_type }}-content'
        app.kubernetes.io/instance: '{{ deployment_type }}-content-{{ meta.name }}'
        app.kubernetes.io/component: content-server
        app.kubernetes.io/part-of: '{{ deployment_type }}'
        app.kubernetes.io/managed-by: '{{ deployment_type }}-operator'
    spec:
{% if is_k8s %}
      securityContext:
        runAsUser: 0
        fsGroup: 0
{% endif %}
      volumes:
        - name: {{ meta.name }}-server
          secret:
            secretName: {{ meta.name }}-server
            items:
              - path: settings.py
                key: settings.py
{% if file_storage %}
        - name: file-storage
          persistentVolumeClaim:
            claimName: {{ meta.name }}-file-storage
{% endif %}
      containers:
        - name: content
          image: "{{ registry }}/{{ project }}/{{ image }}:{{ tag }}"
          imagePullPolicy: "IfNotPresent"
          # We set args, not command, so as to not override the entrypoint script
          args: ["pulp-content"]
{% if content.resource_requirements is defined %}
          resources: {{ content.resource_requirements }}
{% endif %}
          env:
            - name: POSTGRES_SERVICE_HOST
              value: "{{ postgres_host }}"
            - name: POSTGRES_SERVICE_PORT
              value: "{{ postgres_port }}"
            - name: REDIS_SERVICE_HOST
              value: "{{ meta.name }}-redis"
            - name: REDIS_SERVICE_PORT
              value: "{{ default_settings.redis_port }}"
          ports:
            - protocol: TCP
              containerPort: 24816
          volumeMounts:
            - name: {{ meta.name }}-server
              mountPath: "/etc/pulp/"
{% if file_storage %}
            - name: file-storage
              readOnly: false
              mountPath: "/var/lib/pulp"
{% endif %}
