---

- name: Get secret definition from pvc
  k8s_exec:
    namespace: "{{ meta.namespace  }}"
    pod: "{{ meta.name }}-backup-manager"
    command: >-
      bash -c "cat '{{ backup_dir }}/secrets.yaml'"
  register: secrets

- name: Create temp vars file
  tempfile:
    prefix: secret_vars-
  register: secret_vars

- name: Write vars to file locally
  copy:
    dest: "{{ secret_vars.path }}"
    content: "{{ secrets.stdout }}"
    mode: 0640

- name: Include secret vars from backup
  include_vars: "{{ secret_vars.path }}"

- name: Apply secret
  k8s:
    state: present
    definition: "{{ lookup('template', 'secrets.yaml.j2') }}"

- name: Set name of objectstorage file name
  set_fact:
    objstorage_file: 'objectstorage_secret.yaml'

- name: Check to if objectstorage secret exists in  backup directory on PVC
  k8s_exec:
    namespace: "{{ meta.namespace }}"
    pod: "{{ meta.name }}-backup-manager"
    command: >-
      bash -c "stat {{ backup_dir }}/{{ objstorage_file }}"
  register: stat_backup_objectstorage

- name: Create object storage secret
  block:
    - name: Get secret definition from pvc
      k8s_exec:
        namespace: "{{ meta.namespace }}"
        pod: "{{ meta.name }}-backup-manager"
        command: >-
          bash -c "cat '{{ backup_dir }}/{{ objstorage_file }}'"
      register: objectstorage_secret

    - name: Create temp vars file
      tempfile:
        prefix: secret_vars-
      register: secret_vars_obj

    - name: Write vars to file locally
      copy:
        dest: "{{ secret_vars_obj.path }}"
        content: "{{ objectstorage_secret.stdout }}"
        mode: 0640

    - name: Include secret vars from backup
      include_vars: "{{ secret_vars_obj.path }}"

    - name: Apply s3 secret
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/s3_secret.yaml.j2') }}"
      when:
        - storage_type | lower == 's3'

    - name: Apply azure secret
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/azure_secret.yaml.j2') }}"
      when:
        - storage_type | lower == 'azure'
  when:
    - objstorage_file in stat_backup_objectstorage.stdout
