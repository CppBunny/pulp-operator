---
apiVersion: v1
kind: Deployment
metadata:
  name: "{{ meta.name }}-web"
  namespace: "{{ project_name }}"
  labels:
    app: "{{ meta.name }}-{{ deployment_type }}-web"
spec:
  replicas: {{ pulp_web.replicas }}
  selector:
    matchLabels:
      app: "{{ meta.name }}-{{ deployment_type }}-web"
  template:
    metadata:
      labels:
        app: "{{ meta.name }}-{{ deployment_type }}-web"
    spec:
      containers:
        - name: pulp-web
          image: "{{ registry }}/{{ project }}/{{ image_web }}:{{ tag }}"
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: {{ meta.name }}-nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
{% if ingress_type | lower == 'route' and route_tls_termination_mechanism | lower == 'passthrough' %}
            - name: "{{ meta.name }}-nginx-certs"
              mountPath: "/etc/nginx/pki"
              readOnly: true
{% endif %}
          ports:
            - protocol: TCP
              containerPort: 8080
{% if ingress_type | lower == 'route' and route_tls_termination_mechanism | lower == 'passthrough' %}
            - containerPort: 443
{% endif %}
          livenessProbe:
            httpGet:
              path: pulp/api/v3/status/
              port: 8080
              scheme: HTTP
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: pulp/api/v3/status/
              port: 8080
              scheme: HTTP
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
{% if pulp_web.resource_requirements is defined %}
          resources: {{ pulp_web.resource_requirements }}
{% endif %}
      volumes:
        - name: {{ meta.name }}-nginx-conf
          configMap:
            name: '{{ meta.name }}-{{ deployment_type }}-configmap'
            items:
              - key: nginx_conf
                path: nginx.conf
{% if ingress_type | lower == 'route' and route_tls_termination_mechanism | lower == 'passthrough' %}
        - name: "{{ meta.name }}-nginx-certs"
          secret:
            secretName: "{{ route_tls_secret }}"
            items:
              - key: tls.key
                path: 'web.key'
              - key: tls.crt
                path: 'web.crt'
{% endif %}
